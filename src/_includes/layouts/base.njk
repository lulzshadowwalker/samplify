<!doctype html>
<html lang="en" class="scroll-smooth">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>{{ title or site.title }}</title>
  <meta name="description" content="{{ description or site.description }}"/>
  <meta property="og:title" content="{{ ogTitle or site.ogTitle }}"/>
  <meta property="og:description" content="{{ ogDescription or site.ogDescription }}"/>
  <meta property="og:type" content="website"/>
  <meta property="og:image" content="{{ site.ogImage }}"/>
  <link rel="icon" href="assets/favicon.ico"/>
  <meta name="robots" content="index, follow"/>
  <meta name="theme-color" content="#0ea5e9"/>
  <meta property="og:site_name" content="{{ site.name }}"/>
  <meta name="twitter:card" content="{{ site.twitterCard }}"/>
  <meta name="twitter:title" content="{{ ogTitle or site.ogTitle }}"/>
  <meta name="twitter:description" content="{{ ogDescription or site.ogDescription }}"/>
  <meta name="twitter:image" content="{{ site.ogImage }}"/>
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Organization",
    "name": "{{ site.name }}",
    "slogan": "Simplify the Process. Amplify the Precision.",
    "description": "Samplify is a Saudi-born health tech company redefining medical sample logistics in line with Vision 2030. We design and manufacture innovative solutions that ensure samples are transported with accuracy, efficiency, and full traceability. Our technology delivers real-time location and temperature tracking, digital integration with various LIS and TMS systems, automated sorting, helps improve compliance and strengthen patient care by empowering hospitals, laboratories, and logistics providers to safeguard sample integrity.",
    "email": "businessdevelopment@samplify.net",
    "logo": "assets/logo.png",
    "address": {
      "@type": "PostalAddress",
      "addressLocality": "Riyadh",
      "addressCountry": "Kingdom of Saudi Arabia"
    },
    "sameAs": [
      "https://www.linkedin.com/company/samplifyhealthcarelogistics/"
    ],
    "contactPoint": [
      {
        "@type": "ContactPoint",
        "email": "businessdevelopment@samplify.net",
        "telephone": "+966565031166",
        "contactType": "customer support"
      }
    ]
  }
  </script>

  {% if site.analyticsEnabled %}
  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id={{ site.googleAnalyticsId }}"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);} 
    gtag('js', new Date());
    gtag('config', '{{ site.googleAnalyticsId }}');
  </script>

  <!-- PostHog Analytics -->
  <script>
    !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init Re Ms Fs Pe Rs Cs capture Ve calculateEventProperties Ds register register_once register_for_session unregister unregister_for_session zs getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Ls As createPersonProfile Ns Is Us opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing is_capturing clear_opt_in_out_capturing Os debug I js getPageViewId captureTraceFeedback captureTraceMetric".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
    posthog.init('{{ site.posthogKey }}', { api_host: '{{ site.posthogHost }}', defaults: '{{ site.posthogDefaults }}', person_profiles: 'always' });
  </script>
  {% endif %}

  <!-- Font Awesome -->
  <script src="https://kit.fontawesome.com/a51f251d24.js" crossorigin="anonymous"></script>

  <!-- Tailwind CSS CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    // Tailwind configuration for brand palette
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            skybrand: { 300: '#87CEEB', 500: '#0ea5e9' },
            deepblue: { 700: '#1e3a8a', 900: '#0f172a' }
          },
          boxShadow: { glow: '0 10px 30px -10px rgba(14,165,233,0.5)' }
        }
      }
    }
  </script>

  <style>
    /* Masonry using CSS columns for responsive gallery */
    .masonry { columns: 1; column-gap: 1rem; }
    .masonry-item { break-inside: avoid; margin-bottom: 1rem; }
    @media (min-width: 640px) { .masonry { columns: 2; } }
    @media (min-width: 1024px) { .masonry { columns: 3; } }
    @media (min-width: 1280px) { .masonry { columns: 4; } }

    /* Simple fade/slide reveal animations */
    .reveal { opacity: 0; transform: translateY(12px); transition: opacity .6s ease, transform .6s ease; }
    .reveal.in { opacity: 1; transform: translateY(0); }

    /* Typing caret effect */
    .typing::after { content: '|'; animation: blink 1s step-end infinite; margin-left: 2px; }
    @keyframes blink { 50% { opacity: 0; } }

    /* Skeleton shimmer */
    .skeleton { background: linear-gradient(90deg, rgba(0,0,0,0.06) 25%, rgba(0,0,0,0.12) 37%, rgba(0,0,0,0.06) 63%); background-size: 400% 100%; animation: shimmer 1.4s ease-in-out infinite; }
    @keyframes shimmer { 0% { background-position: 200% 0; } 100% { background-position: -200% 0; } }

    /* Accessible custom focus ring */
    .focus-ring:focus-visible { outline: none; box-shadow: 0 0 0 3px rgba(14,165,233,.5); border-radius: .5rem; }

    /* Toasts */
    .toast-root { position: fixed; right: 1rem; bottom: 1rem; z-index: 60; display: flex; flex-direction: column; gap: .5rem; }
    .toast { display: flex; align-items: center; gap: .5rem; padding: .75rem 1rem; border-radius: .75rem; color: #0f172a; background: #fff; box-shadow: 0 10px 20px -10px rgba(2,6,23,.4); border: 1px solid rgba(148,163,184,.4); animation: toast-in .2s ease-out; }
    .toast-success { border-color: rgba(34,197,94,.5); box-shadow: 0 10px 20px -10px rgba(34,197,94,.4); }
    .toast-error { border-color: rgba(239,68,68,.5); box-shadow: 0 10px 20px -10px rgba(239,68,68,.4); }
    @keyframes toast-in { from { transform: translateY(6px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
  </style>
</head>
<body class="min-h-screen bg-white text-slate-800 selection:bg-skybrand-500/20 selection:text-deepblue-900">
  {% include "header.njk" %}
  <main id="home">
    {{ content | safe }}
  </main>
  {% include "footer.njk" %}

  <!-- JavaScript -->
  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();

    // Toast helper
    function showToast(message, type = 'info', timeout = 3500) {
      const root = document.getElementById('toast-root');
      if (!root) return;
      const toast = document.createElement('div');
      toast.className = `toast ${type === 'success' ? 'toast-success' : type === 'error' ? 'toast-error' : ''}`;
      const icon = document.createElement('i');
      icon.className = type === 'success' ? 'fa-solid fa-circle-check text-emerald-500' : type === 'error' ? 'fa-solid fa-circle-exclamation text-red-500' : 'fa-solid fa-circle-info text-skybrand-500';
      const span = document.createElement('span');
      span.textContent = message;
      toast.appendChild(icon);
      toast.appendChild(span);
      root.appendChild(toast);
      setTimeout(() => {
        toast.style.transition = 'opacity .2s ease, transform .2s ease';
        toast.style.opacity = '0';
        toast.style.transform = 'translateY(6px)';
        setTimeout(() => toast.remove(), 220);
      }, timeout);
    }

    // Mobile nav toggle
    const menuBtn = document.getElementById('menuBtn');
    const mobileNav = document.getElementById('mobileNav');
    if (menuBtn && mobileNav) {
      menuBtn.addEventListener('click', () => {
        const expanded = menuBtn.getAttribute('aria-expanded') === 'true';
        menuBtn.setAttribute('aria-expanded', String(!expanded));
        mobileNav.style.maxHeight = expanded ? '0px' : mobileNav.scrollHeight + 'px';
      });
      mobileNav.querySelectorAll('a').forEach(a => a.addEventListener('click', () => {
        menuBtn.setAttribute('aria-expanded', 'false');
        mobileNav.style.maxHeight = '0px';
      }));
    }

    // Smooth scrolling for in-page anchors
    document.querySelectorAll('a[href^="#"]').forEach(link => {
      link.addEventListener('click', (e) => {
        const id = link.getAttribute('href').slice(1);
        const el = document.getElementById(id);
        if (el) {
          e.preventDefault();
          el.scrollIntoView({ behavior: 'smooth', block: 'start' });
          history.pushState(null, '', '#' + id);
        }
      });
    });

    // Intersection Observer reveal
    const io = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in');
          io.unobserve(entry.target);
        }
      });
    }, { threshold: 0.12 });
    document.querySelectorAll('.reveal').forEach(el => io.observe(el));

    // Typing effect for hero headline
    const headline = document.getElementById('heroHeadline');
    if (headline) {
      const fullText = headline.textContent.trim();
      let idx = 0;
      headline.textContent = '';
      function typeNext() {
        if (idx <= fullText.length) {
          headline.textContent = fullText.slice(0, idx);
          idx++;
          setTimeout(typeNext, idx < 10 ? 30 : 14);
        }
      }
      window.addEventListener('load', typeNext);
    }

    // Gallery + Lightbox (only if gallery exists)
    const galleryGrid = document.getElementById('galleryGrid');
    const lightbox = document.getElementById('lightbox');
    const lbImg = document.getElementById('lbImage');
    const lbClose = document.getElementById('lbClose');
    const lbPrev = document.getElementById('lbPrev');
    const lbNext = document.getElementById('lbNext');
    if (galleryGrid) {
      const galleryImages = Array.from({ length: 21 }, (_, i) => `assets/gallery/gallery-${i + 1}.webp`);
      const visibleCount = 9;
      for (const src of galleryImages.slice(0, visibleCount)) {
        const figure = document.createElement('figure');
        figure.className = 'masonry-item relative overflow-hidden rounded-xl bg-slate-100';
        const img = document.createElement('img');
        img.src = src; img.alt = 'Samplify gallery image'; img.loading = 'lazy';
        img.className = 'w-full h-auto transition hover:opacity-95 cursor-zoom-in';
        img.style.opacity = '0'; figure.classList.add('skeleton');
        img.addEventListener('load', () => { img.style.opacity = '1'; figure.classList.remove('skeleton'); });
        figure.appendChild(img);
        figure.tabIndex = 0; figure.setAttribute('role', 'button'); figure.setAttribute('aria-label', 'Open image');
        function openLightbox(src) {
          currentIndex = galleryImages.indexOf(src); if (currentIndex < 0) currentIndex = 0;
          lbImg.src = src; lightbox.classList.remove('hidden'); lbClose.focus(); document.body.style.overflow = 'hidden';
        }
        figure.addEventListener('click', () => openLightbox(src));
        figure.addEventListener('keydown', (e) => { if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); openLightbox(src); } });
        galleryGrid.appendChild(figure);
      }
      document.getElementById('viewAllBtn')?.addEventListener('click', () => {
        if (typeof openLightbox === 'function') openLightbox(galleryImages[0]);
      });
      let currentIndex = 0;
      function closeLightbox() { lightbox.classList.add('hidden'); document.body.style.overflow = ''; }
      function showIndex(i) { if (i < 0) i = galleryImages.length - 1; if (i >= galleryImages.length) i = 0; currentIndex = i; lbImg.src = galleryImages[currentIndex]; }
      lbClose?.addEventListener('click', closeLightbox);
      lbPrev?.addEventListener('click', () => showIndex(currentIndex - 1));
      lbNext?.addEventListener('click', () => showIndex(currentIndex + 1));
      window.addEventListener('keydown', (e) => {
        if (lightbox.classList.contains('hidden')) return;
        if (e.key === 'Escape') closeLightbox();
        if (e.key === 'ArrowLeft') showIndex(currentIndex - 1);
        if (e.key === 'ArrowRight') showIndex(currentIndex + 1);
      });
    }

    // Contact form validation & submission (only if present)
    const form = document.getElementById('contactForm');
    if (form) {
      const statusEl = document.getElementById('formStatus');
      function showError(id, show) { const el = document.getElementById(id); if (!el) return; el.classList.toggle('hidden', !show); }
      function validateEmail(email) { return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email); }
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const submitBtn = form.querySelector('button[type="submit"]');
        const data = new FormData(form);
        const name = data.get('name')?.toString().trim();
        const email = data.get('email')?.toString().trim();
        const message = data.get('message')?.toString().trim();
        let valid = true;
        showError('err-name', !name); if (!name) valid = false;
        showError('err-email', !validateEmail(email || '')); if (!validateEmail(email || '')) valid = false;
        showError('err-message', !message); if (!message) valid = false;
        if (!valid) return;
        submitBtn.disabled = true; statusEl.textContent = 'Sending...'; statusEl.className = 'text-sm text-slate-500';
        try {
          const res = await fetch(form.action, { method: 'POST', headers: { 'Accept': 'application/json' }, body: data });
          if (res.ok) {
            statusEl.textContent = 'Thanks! Your message has been sent.'; statusEl.className = 'text-sm text-green-600'; showToast('Thanks! Your message has been sent.', 'success'); form.reset();
          } else {
            const err = await res.json().catch(() => ({})); const msg = err.error || 'Something went wrong. Please try again later.';
            statusEl.textContent = msg; statusEl.className = 'text-sm text-red-600'; showToast(msg, 'error');
          }
        } catch (err) {
          const msg = 'Network error. Please check your connection and try again.';
          statusEl.textContent = msg; statusEl.className = 'text-sm text-red-600'; showToast(msg, 'error');
        } finally { submitBtn.disabled = false; }
      });
    }
  </script>
</body>
</html>
